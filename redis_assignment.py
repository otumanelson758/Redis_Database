# -*- coding: utf-8 -*-
"""Redis Assignment

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-R_nZ4ht9B9TXn7VeQ3V6P3bv8mA1eqK

#Nelson Redis-Introduction to Redis Project

#Instructions
#Problem Statement

Your task for this project will be to write 

*   A Python script that imports data from a dummy
*  CSV file into a remote Redis database
The dummy CSV file can contain any data that you want but the same data must be
imported into the remote Redis database. Once you do that, you'll then be required to
write Python code that retrieves, updates, and deletes the same data from the Redis
database. Do note that while retrieving the data from Redis, you will be required to store
it in a Pandas data frame.

For the Remote Redis database, you can create a Redis Cloud account on Redis and
sign up for the free fixed plan that doesn't require any payment. Once you've done that,
you'll then create a database that you'll connect to remotely. To connect to Redis you will
need to go through the official Redis documentation and/or use other reliable sources.
"""

!pip install redis
#We install redis application

# Connect to Redis
import redis
#Redis by default consists of 16 logical databases. Starting from 0 index and ending with 15
r = redis.StrictRedis(
    host='redis-15769.c84.us-east-1-2.ec2.cloud.redislabs.com',
    port=15769,
    password='e5ZNNfSWRr3NRqvOuOaELqgFsyq8vXpD',
    db=0,#In redis cluster we can't used select command and only support 0 database
    decode_responses=True
)

#We upload the dummmy file to redis server remotely
from google.colab import files
files.upload()

import csv
#we import the library and then open the file encoded
f = csv.reader(open("dummy.csv",encoding='ISO 8859-1'))
header = next(f)

#we need to reconnect back to redis
r = redis.Redis(
    host='redis-15769.c84.us-east-1-2.ec2.cloud.redislabs.com',
    port=15769, 
    password='e5ZNNfSWRr3NRqvOuOaELqgFsyq8vXpD',
    db=0,#In redis cluster we can't used select command and only support 0 database
    decode_responses=True)

doclist= []
#iterate through the doc
for row in f:
  doc = dict(zip(header, row))
  doclist.append(doc)
#import the json library
import json

key = "dummy"

r.set(key, json.dumps(doclist))
data_frame = json.loads(r.get(key))
print(data_frame)

#Task we need to store the data in pandas 
#import the pandas series library
import pandas as pd

#create pandas dataframe and assisgn to data_redis
data_redis = pd.DataFrame()
#loop through the data_frame 
for item in data_frame:
  data_redis = data_redis.append(item, ignore_index=True)

print(data_redis.shape)
# we will have to upload the file

from google.colab import files
files.upload()

#we need to upload the file to redis server
import csv

f = csv.reader(open("dummy_update.csv",encoding='ISO 8859-1'))
header = next(f)
#we reconnect back to Redis through the host,port,password,db
r = redis.Redis(
    host='redis-15769.c84.us-east-1-2.ec2.cloud.redislabs.com',
    port=15769, 
    password='e5ZNNfSWRr3NRqvOuOaELqgFsyq8vXpD',
    db=0,#In redis cluster we can't used select command and only support 0 database
    decode_responses=True)

doclist_update= []

for row in f:
  doc = dict(zip(header, row))
  doclist_update.append(doc)

""" We will need to import json
 Get file data save in pandas dataframes
"""

import json

key = "dummy"

updated_list = doclist_update + doclist

r.set(key, json.dumps(updated_list))

# get the data save in pandas data frame

data_frame = json.loads(r.get(key))
print(data_frame)
#we import pandas as pd library
import pandas as pd

output = pd.DataFrame()
#iterate through using for loop.
for item in data_frame:
  output = output.append(item, ignore_index=True)

output.shape

#we now delete the data that we created ealier redis flush db

r.flushdb()

# confirm if done successfully
print(r.keys())